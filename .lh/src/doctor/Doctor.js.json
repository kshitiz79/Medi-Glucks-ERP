{
    "sourceFile": "src/doctor/Doctor.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1745229186326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1745229186326,
            "name": "Commit-0",
            "content": "const mongoose = require('mongoose');\n\nconst doctorSchema = new mongoose.Schema({\n  name: { type: String, required: true },\n  specialization: { type: String, required: true },\n  location: { type: String },\n  email: { type: String },\n  phone: { type: String, required: true },\n  registration_number: { type: String, required: true, unique: true },\n  years_of_experience: { type: Number, required: true },\n  date_of_birth: { type: Date },\n  gender: { type: String, required: true },\n  anniversary: { type: Date },\n  headOffice: { \n    type: mongoose.Schema.Types.ObjectId, \n    ref: 'HeadOffice', \n    required: true \n  },\n  visit_history: [{\n    date: { type: Date, required: true },\n    notes: { type: String },\n    confirmed: { type: Boolean, default: false },\n    // The user (sales rep) who scheduled the visit\n    salesRep: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },\n    // New field to store the userâ€™s name who scheduled the visit\n    userName: { type: String }\n  }],\n}, { timestamps: true });\n\nmodule.exports = mongoose.model('Doctor', doctorSchema);\n"
        }
    ]
}