{
    "sourceFile": "scripts/testSpecificUsers.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1757009643455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1757009643455,
            "name": "Commit-0",
            "content": "const mongoose = require('mongoose');\nrequire('dotenv').config();\n\n// Import models\nconst User = require('../src/user/User');\n\n// MongoDB connection\nconst connectDB = async () => {\n  try {\n    const conn = await mongoose.connect(process.env.MONGO_URI || 'mongodb://localhost:27017/glcukscare', {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    });\n    console.log(`MongoDB Connected: ${conn.connection.host}`);\n  } catch (error) {\n    console.error(`Error: ${error.message}`);\n    process.exit(1);\n  }\n};\n\n// Function to test specific user queries\nconst testSpecificUsers = async () => {\n  try {\n    console.log('Testing specific user queries...');\n    \n    // Bihar head office IDs that we know are in the users' headOffices\n    const biharHeadOfficeIds = [\n      new mongoose.Types.ObjectId('68a2f6f9c2507f6549b12547'), // Madhubani\n      new mongoose.Types.ObjectId('68a42d720fd473dd1c3074d3'), // Darbhanga\n      new mongoose.Types.ObjectId('68aef669aad40b6e2db0b415'), // Samastipur\n      new mongoose.Types.ObjectId('68aef792aad40b6e2db0b559'), // Katihar\n      new mongoose.Types.ObjectId('68a2f6a7c2507f6549b1253a'),  // Gaya\n    ];\n    \n    console.log('Testing with these Bihar head office IDs:');\n    biharHeadOfficeIds.forEach((id, index) => {\n      console.log(`  ${index + 1}. ${id}`);\n    });\n    \n    // Test each user individually with the exact query\n    const usersToTest = [\n      'chandan.kumar@gluckscare.com',\n      'kshitizmaurya6@gmail.com',\n      'jitendra.mishra@gluckscare.com',\n      'kundan.kumar@gluckscare.com',\n      'mrinal.ratan@gluckscare.com',\n      'rajat@gluckscare.com',\n      'rajeev.kumar@gluckscare.com'\n    ];\n    \n    console.log('\\n=== INDIVIDUAL USER TESTS ===');\n    \n    for (const email of usersToTest) {\n      const user = await User.findOne({ email: email }).select('name email headOffices');\n      \n      if (!user) {\n        console.log(`\\n${email} - NOT FOUND`);\n        continue;\n      }\n      \n      console.log(`\\n${user.name} (${user.email})`);\n      console.log(`  headOffices:`, user.headOffices);\n      \n      // Test the exact query this user should match\n      const query = { \n        email: email,\n        isActive: true, \n        headOffices: { $in: biharHeadOfficeIds } \n      };\n      \n      const result = await User.findOne(query);\n      console.log(`  Query result: ${result ? 'MATCH' : 'NO MATCH'}`);\n      \n      if (!result) {\n        // Debug why this user doesn't match\n        if (user.headOffices && Array.isArray(user.headOffices)) {\n          console.log(`  Debugging headOffices:`);\n          for (const office of user.headOffices) {\n            const officeId = office._id ? office._id.toString() : office.toString();\n            const isInBiharList = biharHeadOfficeIds.some(id => id.toString() === officeId);\n            console.log(`    ${officeId} - ${isInBiharList ? 'IN BIHAR LIST' : 'NOT IN BIHAR LIST'}`);\n          }\n        }\n      }\n    }\n    \n    console.log('\\n=== FULL QUERY TEST ===');\n    \n    // Test the full query\n    const fullQueryResult = await User.find({ \n      isActive: true, \n      headOffices: { $in: biharHeadOfficeIds } \n    }).select('name email headOffices');\n    \n    console.log(`Full query returned ${fullQueryResult.length} users:`);\n    fullQueryResult.forEach(user => {\n      console.log(`  - ${user.name} (${user.email})`);\n    });\n    \n  } catch (error) {\n    console.error('Error testing specific users:', error);\n  }\n};\n\n// Run the test\nconst run = async () => {\n  await connectDB();\n  await testSpecificUsers();\n  process.exit(0);\n};\n\nrun();"
        }
    ]
}